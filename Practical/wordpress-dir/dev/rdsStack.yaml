Parameters:
  Environment:
    Type: String
    Default: demo
  NetworkStackName:
    Type: String
    Default: networkStack
  DBMasterUser:
    Type: String
    Default: admin
  DBMasterPassword:
    Type: String
    NoEcho: true
    Default: StrongPassword123!
  DBName:
    Type: String
    Default: wordpress
  DBUser:
    Type: String
    Default: wpuser
  DBPassword:
    Type: String
    NoEcho: true
    Default: StrongPassword123!
  DBSubnet1CiDR:
    Type: String
    Default: 172.162.4.0/28
  DBSubnet2CiDR:
    Type: String
    Default: 172.162.4.16/28
  DBSubnet3CiDR:
    Type: String
    Default: 172.162.4.32/28
    
  DBSubnet4CiDR:
    Type: String
    Default: 172.162.4.48/28
  DBSubnet5CiDR:
    Type: String
    Default: 172.162.4.64/28
    
  DBSubnet6CiDR:
    Type: String
    Default: 172.162.4.80/28

Resources:
  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      CidrBlock: !Ref DBSubnet1CiDR
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-DBSubnet1

  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      CidrBlock: !Ref DBSubnet2CiDR
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-DBSubnet2

  DBSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      CidrBlock: !Ref DBSubnet3CiDR
      AvailabilityZone: us-east-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-DBSubnet3

  DBSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      CidrBlock: !Ref DBSubnet4CiDR
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-DBSubnet4

  DBSubnet5:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      CidrBlock: !Ref DBSubnet5CiDR
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-DBSubnet5

  DBSubnet6:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      CidrBlock: !Ref DBSubnet6CiDR
      AvailabilityZone: us-east-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-DBSubnet6

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS MySQL instance
      SubnetIds:
        - !Ref DBSubnet1
        - !Ref DBSubnet2
        - !Ref DBSubnet3
        - !Ref DBSubnet4
        - !Ref DBSubnet5
        - !Ref DBSubnet6
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS Security Group
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !ImportValue
            Fn::Sub: ${NetworkStackName}-VPCcidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  MySQLInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: mysql
      EngineVersion: 8.0.35
      LicenseModel: general-public-license
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBInstanceClass: db.t3.micro
      AvailabilityZone: us-east-1a
      BackupRetentionPeriod: 7
      AllocatedStorage: 20
      MasterUsername: !Ref DBMasterUser
      MasterUserPassword: !Ref DBMasterPassword
      DBName: wordpress
      DBParameterGroupName: default.mysql8.0
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      MultiAZ: false
      DeletionProtection: false

Outputs:
  RDSInstanceEndpoint:
    Description: MySQL RDS Endpoint
    Value: !GetAtt MySQLInstance.Endpoint.Address
  DBSecurityGroupID:
    Description: MySQL SG
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-MySQLSecurityGroupID
