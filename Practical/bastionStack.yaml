Parameters:
  NetworkStackName:
    Type: String
    Default: networkStack

Resources:
  BastionElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  BastionEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt BastionElasticIP.AllocationId
      InstanceId: !Ref BastionInstance

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH access
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 81
          ToPort: 81
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0

  EC2InstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-084568db4383264d4
        InstanceType: t2.micro
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 22
              VolumeType: gp2
              DeleteOnTermination: true
              Encrypted: true
        MetadataOptions:
          InstanceMetadataTags: enabled
        NetworkInterfaces:
          - DeviceIndex: 0
            SubnetId: !ImportValue
              Fn::Sub: ${NetworkStackName}-PublicSubnet1ID
            AssociatePublicIpAddress: true
            Groups:
              - !Ref InstanceSecurityGroup
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: department
                Value: dev
      LaunchTemplateName: Bastion-Instance-Template
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Stack
              Value: demo

  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2InstanceLaunchTemplate
        Version: !GetAtt EC2InstanceLaunchTemplate.LatestVersionNumber
      KeyName: demo-ssh-key
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          exec > /var/log/user-data.log 2>&1

          apt-get update -y

          # Install Apache, PHP, and MySQL
          apt-get install -y apache2 php php-mysql libapache2-mod-php mariadb-server wget unzip

          # Enable and start Apache & MySQL
          systemctl enable apache2
          systemctl start apache2
          systemctl enable mariadb
          systemctl start mariadb

          # Secure MySQL installation
          mysql -e "UPDATE mysql.user SET Password=PASSWORD('StrongPassword123!') WHERE User='root';"
          mysql -e "DELETE FROM mysql.user WHERE User='';"
          mysql -e "DROP DATABASE IF EXISTS test;"
          mysql -e "FLUSH PRIVILEGES;"

          # Create WordPress DB and user
          mysql -uroot -pStrongPassword123! -e "CREATE DATABASE wordpressdb;"
          mysql -uroot -pStrongPassword123! -e "CREATE USER 'wpuser'@'localhost' IDENTIFIED BY 'StrongPassword123!';"
          mysql -uroot -pStrongPassword123! -e "GRANT ALL PRIVILEGES ON wordpressdb.* TO 'wpuser'@'localhost';"
          mysql -uroot -pStrongPassword123! -e "FLUSH PRIVILEGES;"

          # Download and install WordPress
          cd /tmp
          wget https://wordpress.org/latest.tar.gz
          tar -xvf latest.tar.gz
          cp -R wordpress /var/www/html/
          chown -R www-data:www-data /var/www/html/wordpress/
          chmod -R 755 /var/www/html/wordpress/
          mkdir -p /var/www/html/wordpress/wp-content/uploads
          chown -R www-data:www-data /var/www/html/wordpress/wp-content/uploads/

          # Configure wp-config.php
          cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php
          sed -i "s/database_name_here/wordpressdb/" /var/www/html/wordpress/wp-config.php
          sed -i "s/username_here/wpuser/" /var/www/html/wordpress/wp-config.php
          sed -i "s/password_here/StrongPassword123!/" /var/www/html/wordpress/wp-config.php

          echo "UserData completed successfully" > /var/log/userdata-success.log

      Tags:
        - Key: Name
          Value: BastionVM

Outputs:
  StackBastion:
    Description: The ID of the Bastion VM
    Value: !Ref BastionInstance
    Export:
      Name: !Sub ${AWS::StackName}-BastionInstanceID
