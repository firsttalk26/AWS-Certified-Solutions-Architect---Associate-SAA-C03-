Parameters:
  NetworkStackName:
    Type: String
    Default: networkStack
  MySQLRootPassword:
    Type: String
    NoEcho: true
    Default: StrongPassword123!
  MySQLDBName:
    Type: String
    Default: wordpressdb
  MySQLUser:
    Type: String
    Default: wpuser
  MySQLUserPassword:
    Type: String
    NoEcho: true
    Default: StrongPassword123!

Resources:
  MySQLSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow MySQL from WordPress SG
      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VPCID
  
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  MySQLInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-084568db4383264d4
      KeyName: demo-ssh-key
      SubnetId: !ImportValue
        Fn::Sub: ${NetworkStackName}-PublicSubnet1ID
      SecurityGroupIds:
        - !Ref MySQLSecurityGroup
      Tags:
        - Key: Name
          Value: MySQLServer
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          apt-get update -y
          apt-get install -y mariadb-server
          systemctl enable mariadb
          systemctl start mariadb
          mysql -e "CREATE DATABASE ${MySQLDBName};"
          mysql -e "CREATE USER '${MySQLUser}'@'%' IDENTIFIED BY '${MySQLUserPassword}';"
          mysql -e "GRANT ALL PRIVILEGES ON ${MySQLDBName}.* TO '${MySQLUser}'@'%';"
          mysql -e "FLUSH PRIVILEGES;"
          sed -i "s/^bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/mariadb.conf.d/50-server.cnf
          systemctl restart mariadb

Outputs:
  MySQLPrivateIP:
    Description: Private IP of the MySQL Instance
    Value: !GetAtt MySQLInstance.PrivateIp
    Export:
      Name: !Sub ${AWS::StackName}-MySQLPrivateIP
  MySQLSecurityGroupID:
    Description: Private IP of the MySQL Instance
    Value: !Ref MySQLSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-MySQLSecurityGroupID
